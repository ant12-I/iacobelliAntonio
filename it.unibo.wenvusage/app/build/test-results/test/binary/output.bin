=TestMoveVirtualRobot | setUp: robot should be at HOME-DOWN 
"TestMoveVirtualRobot | testWork 
turnLeft sendCmd 
VMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":true,"move":"turnLeft"}
:MoveVirtualRobot | checkCollision_simple collision=false
turnRight sendCmd 
WMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":true,"move":"turnRight"}
:MoveVirtualRobot | checkCollision_simple collision=false
alarm sendCmd 
SMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":true,"move":"alarm"}
:MoveVirtualRobot | checkCollision_simple collision=false
*%%%  TestMoveVirtualRobot |  terminates 
=TestMoveVirtualRobot | setUp: robot should be at HOME-DOWN 
)TestMoveVirtualRobot | testMoveForward 
moveForward sendCmd 
YMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":true,"move":"moveForward"}
:MoveVirtualRobot | checkCollision_simple collision=false
moveBackward sendCmd 
ZMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":true,"move":"moveBackward"}
:MoveVirtualRobot | checkCollision_simple collision=false
*%%%  TestMoveVirtualRobot |  terminates 
=TestMoveVirtualRobot | setUp: robot should be at HOME-DOWN 
)TestMoveVirtualRobot | testMoveForward 
moveForward sendCmd 
ZMoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":false,"move":"moveForward"}
9MoveVirtualRobot | checkCollision_simple collision=true
moveBackward sendCmd 
[MoveVirtualRobot | checkCollision_simple jsonStr= {"endmove":false,"move":"moveBackward"}
9MoveVirtualRobot | checkCollision_simple collision=true
*%%%  TestMoveVirtualRobot |  terminates 
